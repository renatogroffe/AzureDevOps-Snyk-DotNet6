trigger:
- main

variables:
  vmImageName: 'ubuntu-latest'
  projectDirectory: './src/WorkerContagem'

stages:
- stage: CodeAnalysis
  displayName: Code Analysis stage
  jobs:
  - job: CodeAnalysis
    displayName: CodeAnalysis
    variables:
      - group: snyk-configurations
    pool:
      vmImage: $(vmImageName)
    steps:
      - script: |
          npm install -g snyk
        displayName: Instalar utilitario do Snyk
      - script: |
          snyk
        displayName: Testar utilitario do Snyk
      - script: |
          snyk auth $(SnykApiKey)
        displayName: Autenticar via utilitario do Snyk
      - script:
          mkdir results
        displayName: Criacao do diretorio /results que contera os resultados dos testes
      - script: |
          cd $(projectDirectory)
          dotnet restore
        displayName: Restaurar dependencias do projeto
      - script: |
          cd $(projectDirectory)
          snyk test --sarif-file-output=$(Build.SourcesDirectory)/results/packages.sarif
        displayName: Executar analise de dependencias via utilitario do Snyk
        condition: always()
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: './results/'
          ArtifactName: 'CodeAnalysisLogs'
          publishLocation: 'Container'
        displayName: Publicacao de relatorio SARIF
        condition: always()
- stage: ImageAnalysis
  displayName: Image Analysis stage
  dependsOn: CodeAnalysis
  condition: always()
  jobs:
  - job: ImageAnalysis
    displayName: ImageAnalysis
    variables:
      - group: snyk-configurations
    pool:
      vmImage: $(vmImageName)
    steps:
      - script: |
          npm install -g snyk
        displayName: Instalar utilitario do Snyk
      - script: |
          snyk
        displayName: Testar utilitario do Snyk
      - script: |
          snyk auth $(SnykApiKey)
        displayName: Autenticar via utilitario do Snyk
      - script:
          mkdir results
        displayName: Criacao do diretorio /results que contera os resultados dos testes
      - script: |
          cd $(projectDirectory)
          docker build . -t apicontagem:snyk-analysis --no-cache
        displayName: Build de imagem para analise
      - script: |
          cd $(projectDirectory)
          snyk container test apicontagem:snyk-analysis --sarif-file-output=$(Build.SourcesDirectory)/results/containers.sarif
        displayName: Executar analise de imagem via utilitario do Snyk
      - script: |
          cd $(Build.SourcesDirectory)/results
          pwd
          ls
        displayName: Listar arquivos .sarif gerados
        condition: always()
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: './results/'
          ArtifactName: 'CodeAnalysisLogs'
          publishLocation: 'Container'
        displayName: Publicacao de relatorio SARIF
        condition: always()